(define (array bool) my-make-array ([len : int] [init : bool])
        (make-array len init))

(define bool my-array-at ([arr : (array bool)] [i : int])
        (array-at arr i))

(define bool my-array-put ([arr : (array bool)] [i : int] [e : bool])
        (array-put arr i e))

(define int my-array-size ([arr : (array bool)])
        (array-size arr))

(check-function-type my-make-array (int bool -> (array bool)))
(check-function-type my-array-at ((array bool) int -> bool))
(check-function-type my-array-put ((array bool) int bool -> bool))
(check-function-type my-array-size ((array bool) -> int))

(val arr (make-array 5 0))
(check-expect (array-size arr) 5)
(check-expect (array-at arr 2) 0)
(check-expect (array-put arr 2 4) 4)
(check-expect (array-at arr 2) 4)

(val arr2 (make-array 3 0))
(check-expect (array-size arr2) 3)
(check-expect (array-at arr2 2) 0)
(check-expect (array-put arr2 2 1) 1)
(check-expect (array-at arr2 2) 1)